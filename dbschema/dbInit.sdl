# RESET DATABASE
delete sys_app::HomeScreen;
delete sys_app::HomeScreenWidget;
delete sys_app::Node;
delete sys_app::NodeObj;
delete sys_core::Code;
delete sys_core::CodeType;
delete sys_user::UserType;
delete sys_core::ObjRoot;
delete sys_core::Obj;
delete sys_core::Ent;
delete sys_user::User;

# POPULATE DATABASE

# ObjRoot
insert sys_core::ObjRoot { name := 'root' };

# User
for x in {
  ('System', 'User', 'user_sys', '!8394812kalsdjfa*!@#$$*&'),
  ('Staff', 'Test-User', 'user_cm_test_staff', '123'),
  ('Student-Applicant', 'Test-User', 'user_cm_test_student_applicant', '123'),
  ('Student', 'Test-User', 'user_cm_test_student', '123'),
}
union (insert sys_user::User {
  first_name := x.0,
  last_name := x.1,
  username := x.2,
  password := x.3
});

# Ent
with 
my_creator := (select sys_user::getUser('user_sys'))
for x in {
  'app_sys', 
  'app_cm',
}
union (insert sys_core::Ent {
  owner := (select sys_core::getRoot()),
  name := x,
  created_by := my_creator,
  modified_by := my_creator
});

# CodeType
with 
my_creator := (select sys_user::getUser('user_sys')),
for x in {
  ('app_sys', 'ct_sys_form_type'),
  ('app_sys', 'ct_sys_icon'),
  ('app_sys', 'ct_sys_node_type'),
}
union (insert sys_core::CodeType {
  owner := (select sys_core::getEnt(x.0)),
  name := x.1,
  created_by := my_creator,
  modified_by := my_creator
});

# Code
with 
my_creator := (select sys_user::getUser('user_sys')),
for x in {
  # form types
  ('ct_sys_form_type', 'app_sys', 'composite'),
  ('ct_sys_form_type', 'app_sys', 'detail'),
  ('ct_sys_form_type', 'app_sys', 'list'),
  
  # icons
  ('ct_sys_icon', 'app_cm', 'application'),
  ('ct_sys_icon', 'app_cm', 'goals'),
  ('ct_sys_icon', 'app_cm', 'message'),
  ('ct_sys_icon', 'app_cm', 'activities'),
  ('ct_sys_icon', 'app_cm', 'quote-enclosed'),

  # node types
  ('ct_sys_node_type', 'app_sys', 'form'),
  ('ct_sys_node_type', 'app_sys', 'header'),
  ('ct_sys_node_type', 'app_sys', 'page'),
  ('ct_sys_node_type', 'app_sys', 'program'),
  
}
union (insert sys_core::Code {
  code_type := (select sys_core::getCodeType(x.0)),
  owner := (select sys_core::getEnt(x.1)),
  name := x.2,
  created_by := my_creator,
  modified_by := my_creator
});

# NodeObj-Forms
with 
my_creator := (select sys_user::getUser('user_sys')),
for x in {
  ('app_sys', 'form_sys_app_list', 'Applications', 'list', '', ''),
  ('app_sys', 'form_sys_app_detail', 'Application', 'detail', '', ''),
  ('app_sys', 'form_sys_user_list', 'Users', 'list', '', ''),
  ('app_sys', 'form_sys_org_list', 'Organizations', 'list', '', ''),
  ('app_sys', 'form_sys_utility_list', 'Utilities', 'list', '', ''),
  ('app_sys', 'form_sys_utility_test_list', 'Test', 'list', '', ''),
}
union (insert sys_app::Form {
  owner := (select sys_core::getEnt(x.0)),
  name := x.1,
  label := x.2,
  code_type := (select sys_core::getCode('ct_sys_form_type', x.3)),
  sub_header := x.4,
  description := x.5,
  created_by := my_creator,
  modified_by := my_creator
});

# NodeObj-Pages
with 
my_creator := (select sys_user::getUser('user_sys')),
for x in {
  ('app_cm', 'pg_cm_application', 'Application', '', '', '/apps/cm/application'),
  ('app_cm', 'pg_cm_goals', 'Goals', '', '', '/apps/cm/goals'),
  ('app_cm', 'pg_cm_messages', 'Messages', '', '', '/apps/cm/messages'),
  ('app_cm', 'pg_cm_activities', 'Activities', '', '', '/apps/cm/activities'),
  ('app_cm', 'pg_cm_quotes', 'Quotes', '', '', '/apps/cm/quotes'),
}
union (insert sys_app::Page {
  owner := (select sys_core::getEnt(x.0)),
  name := x.1,
  label := x.2,
  sub_header := x.3,
  description := x.4,
  link := x.5,
  created_by := my_creator,
  modified_by := my_creator
});

# Nodes - root/programs
with 
my_creator := (select sys_user::getUser('user_sys')),
for x in {
  ('app_sys', 'pgm_sys_admin', 'Administration', 'program', 10, 'application'), 
  ('app_cm', 'pgm_cm_staff', 'CM-Staff', 'program', 20, 'application'), 
  ('app_cm', 'pgm_cm_student_applicant', 'CM-Applicant', 'program', 30, 'application'), 
  ('app_cm', 'pgm_cm_student', 'CM-Student', 'program', 40, 'application'), 
}
union (insert sys_app::Node {
  owner := (select sys_core::getEnt(x.0)),
  name := x.1,
  label := x.2,
  code_type := (select sys_core::getCode('ct_sys_node_type', x.3)),
  order := x.4,
  code_icon := (select sys_core::getCode('ct_sys_icon', x.5)),
  created_by := my_creator,
  modified_by := my_creator
});

# Nodes - leaves (forms, headers, pages) - level 1
with 
my_creator := (select sys_user::getUser('user_sys')),
for x in {
  ('app_sys', 'node_sys_app_list', 'Applications', 'form', 10, 'application', ('app_sys', 'pgm_sys_admin'), 'form_sys_app_list'), 
  ('app_sys', 'node_sys_user_list', 'Users', 'form', 20, 'application', ('app_sys', 'pgm_sys_admin'), 'form_sys_user_list'), 
  ('app_sys', 'node_sys_org_list', 'Organizations', 'form', 30, 'application', ('app_sys', 'pgm_sys_admin'), 'form_sys_org_list'), 
  ('app_sys', 'node_sys_utility_header', 'Utilities', 'header', 40, 'application', ('app_sys', 'pgm_sys_admin'), 'form_sys_org_list'), 
  
  ('app_cm', 'node_cm_sa_app', 'Application', 'page', 10, 'application', ('app_cm', 'pgm_cm_student_applicant'), 'pg_cm_application'), 

  ('app_cm', 'node_cm_student_app', 'Application', 'page', 10, 'application', ('app_cm', 'pgm_cm_student'), 'pg_cm_application'), 
  ('app_cm', 'node_cm_student_goals', 'Goals', 'page', 20, 'application', ('app_cm', 'pgm_cm_student'), 'pg_cm_goals'), 
  ('app_cm', 'node_cm_student_messages', 'Messages', 'page', 30, 'application', ('app_cm', 'pgm_cm_student'), 'pg_cm_messages'), 
  ('app_cm', 'node_cm_student_activities', 'Activities', 'page', 40, 'application', ('app_cm', 'pgm_cm_student'), 'pg_cm_activities'), 
  ('app_cm', 'node_cm_student_quotes', 'Quotes', 'page', 50, 'application', ('app_cm', 'pgm_cm_student'), 'pg_cm_quotes'), 
}
union (insert sys_app::Node {
  owner := (select sys_core::getEnt(x.0)),
  name := x.1,
  label := x.2,
  code_type := (select sys_core::getCode('ct_sys_node_type', x.3)),
  order := x.4,
  code_icon := (select sys_core::getCode('ct_sys_icon', x.5)),
  parent := (select sys_app::getNode(x.6.0, x.6.1)),
  obj := (select sys_app::getNodeObj(x.7)),
  created_by := my_creator,
  modified_by := my_creator
});

# Nodes - leaves (forms, headers, pages) - level 2
with 
my_creator := (select sys_user::getUser('user_sys')),
for x in {
  ('app_sys', 'node_sys_app_detail', 'Application', 'form', 10, 'application', ('app_sys', 'node_sys_app_list'), 'form_sys_app_detail'), 
  ('app_sys', 'node_sys_utility_quotes', 'Utilities', 'page', 10, 'application', ('app_sys', 'node_sys_utility_header'), 'pg_cm_quotes'),
}
union (insert sys_app::Node {
  owner := (select sys_core::getEnt(x.0)),
  name := x.1,
  label := x.2,
  code_type := (select sys_core::getCode('ct_sys_node_type', x.3)),
  order := x.4,
  code_icon := (select sys_core::getCode('ct_sys_icon', x.5)),
  parent := (select sys_app::getNode(x.6.0, x.6.1)),
  obj := (select sys_app::getNodeObj(x.7)),
  created_by := my_creator,
  modified_by := my_creator
});


# HomeScreenWidget
with 
my_creator := (select sys_user::getUser('user_sys')),
for x in {
  ('app_sys', 'hsw_sys_user'),   
  ('app_cm', 'hsw_cm_user'),
  ('app_cm', 'hsw_cm_quotes'),
}
union (insert sys_app::HomeScreenWidget {
  owner := (select sys_core::getEnt(x.0)),
  name := x.1,
  created_by := my_creator,
  modified_by := my_creator
});

# HomeScreen
with 
my_creator := (select sys_user::getUser('user_sys')),
for x in {
  ('app_sys', 'hs_sys_user', ['hsw_sys_user', 'hsw_cm_user', 'hsw_cm_quotes']),   
  ('app_cm', 'hs_cm_staff', ['hsw_sys_user', 'hsw_cm_quotes']),   
  ('app_cm', 'hs_cm_student', ['hsw_cm_user', 'hsw_cm_quotes']),   
}
union (insert sys_app::HomeScreen {
  owner := (select sys_core::getEnt(x.0)),
  name := x.1,
  widgets := assert_distinct((
    for y in array_unpack(x.2) 
    union (select sys_app::getHomeScreenWidget(y))
  )),
  created_by := my_creator,
  modified_by := my_creator
});

# UserType
with 
my_creator := (select sys_user::getUser('user_sys')),
for x in {
  ('app_sys', 'ut_sys_admin'),
  ('app_cm', 'ut_cm_staff'),
  ('app_cm', 'ut_cm_student_applicant'),
  ('app_cm', 'ut_cm_student'),
}
union (insert sys_user::UserType {
  owner := (select sys_core::getEnt(x.0)),
  name := x.1,
  created_by := my_creator,
  modified_by := my_creator
});

# UserType - resources - HomeScreen
for x in {
  # HOME SCREENS
  ('ut_sys_admin', 'hs_sys_user'),
  ('ut_cm_staff', 'hs_cm_staff'),
  ('ut_cm_student_applicant', 'hs_cm_student'),
  ('ut_cm_student', 'hs_cm_student'),
}
union (update sys_user::UserType
filter
  .name = x.0
set {
  resources += (select sys_app::getHomeScreen(x.1)),
});
  
# UserType - resources - Program
for x in {
  # PROGRAMS
  ('ut_sys_admin', ('app_sys', 'pgm_sys_admin')),
  ('ut_sys_admin', ('app_cm', 'pgm_cm_staff')),
  ('ut_sys_admin', ('app_cm', 'pgm_cm_student_applicant')),
  ('ut_sys_admin', ('app_cm', 'pgm_cm_student')),
  ('ut_cm_staff', ('app_cm', 'pgm_cm_staff')),
  ('ut_cm_student_applicant', ('app_cm', 'pgm_cm_student_applicant')),
  ('ut_cm_student', ('app_cm', 'pgm_cm_student')),
}
union (update sys_user::UserType
filter
  .name = x.0
set {
  resources += (select sys_app::getNode(x.1.0, x.1.1)),
});

# UserType - users
for x in {
  ('ut_sys_admin', 'user_sys'),
  ('ut_cm_staff', 'user_cm_test_staff'),
  ('ut_cm_student_applicant', 'user_cm_test_student_applicant'),
  ('ut_cm_student', 'user_cm_test_student'),
}
union (update sys_user::UserType
filter
  .name = x.0
set {
    users += (select sys_user::getUser(x.1))
});

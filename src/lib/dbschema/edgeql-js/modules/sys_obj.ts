// GENERATED by @edgedb/generate v0.3.4

import * as $ from "../reflection";
import * as _ from "../imports";
import type * as _sys_core from "./sys_core";
import type * as _default from "./default";
import type * as _sys_db from "./sys_db";
import type * as _std from "./std";
export type $DataObjλShape = $.typeutil.flatten<_sys_core.$ObjλShape & {
  "actions": $.LinkDesc<$DataObjAction, $.Cardinality.Many, {}, false, false,  false, false>;
  "codeCardinality": $.LinkDesc<_sys_core.$Code, $.Cardinality.One, {}, false, false,  false, false>;
  "codeComponent": $.LinkDesc<_sys_core.$Code, $.Cardinality.One, {}, false, false,  false, false>;
  "<dataObj[is sys_obj::NodeObj]": $.LinkDesc<$NodeObj, $.Cardinality.Many, {}, false, false,  false, false>;
  "<dataObj": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $DataObj = $.ObjectType<"sys_obj::DataObj", $DataObjλShape, null, [
  ..._sys_core.$Obj['__exclusives__'],
]>;
const $DataObj = $.makeType<$DataObj>(_.spec, "31e57d4f-6ebf-11ee-92a3-27cfe52ecf1f", _.syntax.literal);

const DataObj: $.$expr_PathNode<$.TypeSet<$DataObj, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($DataObj, $.Cardinality.Many), null);

export type $DataObjActionλShape = $.typeutil.flatten<_sys_core.$ObjλShape & {
  "order": $.PropertyDesc<_default.$nonNegative, $.Cardinality.One, false, false, false, false>;
  "<actions[is sys_obj::DataObj]": $.LinkDesc<$DataObj, $.Cardinality.Many, {}, false, false,  false, false>;
  "<actions[is sys_obj::Form]": $.LinkDesc<$Form, $.Cardinality.Many, {}, false, false,  false, false>;
  "<actions": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $DataObjAction = $.ObjectType<"sys_obj::DataObjAction", $DataObjActionλShape, null, [
  ..._sys_core.$Obj['__exclusives__'],
]>;
const $DataObjAction = $.makeType<$DataObjAction>(_.spec, "31aff7c5-6ebf-11ee-99ed-cf68418c8bd1", _.syntax.literal);

const DataObjAction: $.$expr_PathNode<$.TypeSet<$DataObjAction, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($DataObjAction, $.Cardinality.Many), null);

export type $FormλShape = $.typeutil.flatten<$DataObjλShape & {
  "table": $.LinkDesc<_sys_db.$Table, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "fields": $.LinkDesc<$FormField, $.Cardinality.Many, {}, false, false,  false, false>;
  "description": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "isPopup": $.PropertyDesc<_std.$bool, $.Cardinality.AtMostOne, false, false, false, false>;
  "subHeader": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "submitButtonLabel": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
}>;
type $Form = $.ObjectType<"sys_obj::Form", $FormλShape, null, [
  ...$DataObj['__exclusives__'],
]>;
const $Form = $.makeType<$Form>(_.spec, "31ef79de-6ebf-11ee-8941-57f36c834d0c", _.syntax.literal);

const Form: $.$expr_PathNode<$.TypeSet<$Form, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Form, $.Cardinality.Many), null);

export type $FormFieldλShape = $.typeutil.flatten<_std.$Object_6b06be9b27fe11ee83ff159af7e1bb81λShape & {
  "codeAccess": $.LinkDesc<_sys_core.$Code, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "codeDbDataOp": $.LinkDesc<_sys_core.$Code, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "codeDbDataSource": $.LinkDesc<_sys_core.$Code, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "codeDbListDir": $.LinkDesc<_sys_core.$Code, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "codeElement": $.LinkDesc<_sys_core.$Code, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "codeInputType": $.LinkDesc<_sys_core.$Code, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "column": $.LinkDesc<_sys_db.$Column, $.Cardinality.One, {}, false, false,  false, false>;
  "dbDataSourceKey": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "dbListOrder": $.PropertyDesc<_default.$nonNegative, $.Cardinality.AtMostOne, false, false, false, false>;
  "dbName": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "dbSelectOrder": $.PropertyDesc<_default.$nonNegative, $.Cardinality.AtMostOne, false, false, false, false>;
  "isDbAllowNull": $.PropertyDesc<_std.$bool, $.Cardinality.AtMostOne, false, false, false, false>;
  "isDbExcludeInsert": $.PropertyDesc<_std.$bool, $.Cardinality.AtMostOne, false, false, false, false>;
  "isDbExcludeUpdate": $.PropertyDesc<_std.$bool, $.Cardinality.AtMostOne, false, false, false, false>;
  "isDbIdentity": $.PropertyDesc<_std.$bool, $.Cardinality.AtMostOne, false, false, false, false>;
  "isDbListOrderField": $.PropertyDesc<_std.$bool, $.Cardinality.AtMostOne, false, false, false, false>;
  "isDbPreset": $.PropertyDesc<_std.$bool, $.Cardinality.AtMostOne, false, false, false, false>;
  "isDbSys": $.PropertyDesc<_std.$bool, $.Cardinality.AtMostOne, false, false, false, false>;
  "isDisplay": $.PropertyDesc<_std.$bool, $.Cardinality.AtMostOne, false, false, false, false>;
  "isDisplayable": $.PropertyDesc<_std.$bool, $.Cardinality.AtMostOne, false, false, false, false>;
  "<fields[is sys_obj::Form]": $.LinkDesc<$Form, $.Cardinality.Many, {}, false, false,  false, false>;
  "<fields": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $FormField = $.ObjectType<"sys_obj::FormField", $FormFieldλShape, null, [
  ..._std.$Object_6b06be9b27fe11ee83ff159af7e1bb81['__exclusives__'],
]>;
const $FormField = $.makeType<$FormField>(_.spec, "31ea966c-6ebf-11ee-9cb2-fb5fa1c9bb3d", _.syntax.literal);

const FormField: $.$expr_PathNode<$.TypeSet<$FormField, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($FormField, $.Cardinality.Many), null);

export type $NodeObjλShape = $.typeutil.flatten<_sys_core.$ObjλShape & {
  "codeIcon": $.LinkDesc<_sys_core.$Code, $.Cardinality.One, {}, false, false,  false, false>;
  "codeType": $.LinkDesc<_sys_core.$Code, $.Cardinality.One, {}, false, false,  false, false>;
  "parent": $.LinkDesc<$NodeObj, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "order": $.PropertyDesc<_default.$nonNegative, $.Cardinality.One, false, false, false, false>;
  "page": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "dataObj": $.LinkDesc<$DataObj, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "<parent[is sys_obj::NodeObj]": $.LinkDesc<$NodeObj, $.Cardinality.Many, {}, false, false,  false, false>;
  "<parent": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $NodeObj = $.ObjectType<"sys_obj::NodeObj", $NodeObjλShape, null, [
  ..._sys_core.$Obj['__exclusives__'],
]>;
const $NodeObj = $.makeType<$NodeObj>(_.spec, "31b45599-6ebf-11ee-951b-95a689761096", _.syntax.literal);

const NodeObj: $.$expr_PathNode<$.TypeSet<$NodeObj, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($NodeObj, $.Cardinality.Many), null);

type getDataObjActionλFuncExpr<
  P1 extends _.castMaps.orScalarLiteral<$.TypeSet<_std.$str>>,
> = $.$expr_Function<
  $DataObjAction, $.cardutil.overrideLowerBound<$.cardutil.paramCardinality<P1>, 'Zero'>
>;
function getDataObjAction<
  P1 extends _.castMaps.orScalarLiteral<$.TypeSet<_std.$str>>,
>(
  dataObjActionName: P1,
): getDataObjActionλFuncExpr<P1>;
function getDataObjAction(...args: any[]) {
  const {returnType, cardinality, args: positionalArgs, namedArgs} = _.syntax.$resolveOverload('sys_obj::getDataObjAction', args, _.spec, [
    {args: [{typeId: "00000000-0000-0000-0000-000000000101", optional: false, setoftype: false, variadic: false}], returnTypeId: "31aff7c5-6ebf-11ee-99ed-cf68418c8bd1", returnTypemod: "OptionalType"},
  ]);
  return _.syntax.$expressionify({
    __kind__: $.ExpressionKind.Function,
    __element__: returnType,
    __cardinality__: cardinality,
    __name__: "sys_obj::getDataObjAction",
    __args__: positionalArgs,
    __namedargs__: namedArgs,
  }) as any;
};

type getNodeObjByIdλFuncExpr<
  P1 extends _.castMaps.orScalarLiteral<$.TypeSet<_std.$str>>,
> = $.$expr_Function<
  $NodeObj, $.cardutil.overrideLowerBound<$.cardutil.paramCardinality<P1>, 'Zero'>
>;
function getNodeObjById<
  P1 extends _.castMaps.orScalarLiteral<$.TypeSet<_std.$str>>,
>(
  nodeObjId: P1,
): getNodeObjByIdλFuncExpr<P1>;
function getNodeObjById(...args: any[]) {
  const {returnType, cardinality, args: positionalArgs, namedArgs} = _.syntax.$resolveOverload('sys_obj::getNodeObjById', args, _.spec, [
    {args: [{typeId: "00000000-0000-0000-0000-000000000101", optional: false, setoftype: false, variadic: false}], returnTypeId: "31b45599-6ebf-11ee-951b-95a689761096", returnTypemod: "OptionalType"},
  ]);
  return _.syntax.$expressionify({
    __kind__: $.ExpressionKind.Function,
    __element__: returnType,
    __cardinality__: cardinality,
    __name__: "sys_obj::getNodeObjById",
    __args__: positionalArgs,
    __namedargs__: namedArgs,
  }) as any;
};

type getNodeObjByNameλFuncExpr<
  P1 extends _.castMaps.orScalarLiteral<$.TypeSet<_std.$str>>,
> = $.$expr_Function<
  $NodeObj, $.cardutil.overrideLowerBound<$.cardutil.paramCardinality<P1>, 'Zero'>
>;
function getNodeObjByName<
  P1 extends _.castMaps.orScalarLiteral<$.TypeSet<_std.$str>>,
>(
  nodeObjName: P1,
): getNodeObjByNameλFuncExpr<P1>;
function getNodeObjByName(...args: any[]) {
  const {returnType, cardinality, args: positionalArgs, namedArgs} = _.syntax.$resolveOverload('sys_obj::getNodeObjByName', args, _.spec, [
    {args: [{typeId: "00000000-0000-0000-0000-000000000101", optional: false, setoftype: false, variadic: false}], returnTypeId: "31b45599-6ebf-11ee-951b-95a689761096", returnTypemod: "OptionalType"},
  ]);
  return _.syntax.$expressionify({
    __kind__: $.ExpressionKind.Function,
    __element__: returnType,
    __cardinality__: cardinality,
    __name__: "sys_obj::getNodeObjByName",
    __args__: positionalArgs,
    __namedargs__: namedArgs,
  }) as any;
};

type getDataObjλFuncExpr<
  P1 extends _.castMaps.orScalarLiteral<$.TypeSet<_std.$str>>,
> = $.$expr_Function<
  $DataObj, $.cardutil.overrideLowerBound<$.cardutil.paramCardinality<P1>, 'Zero'>
>;
function getDataObj<
  P1 extends _.castMaps.orScalarLiteral<$.TypeSet<_std.$str>>,
>(
  dataObjName: P1,
): getDataObjλFuncExpr<P1>;
function getDataObj(...args: any[]) {
  const {returnType, cardinality, args: positionalArgs, namedArgs} = _.syntax.$resolveOverload('sys_obj::getDataObj', args, _.spec, [
    {args: [{typeId: "00000000-0000-0000-0000-000000000101", optional: false, setoftype: false, variadic: false}], returnTypeId: "31e57d4f-6ebf-11ee-92a3-27cfe52ecf1f", returnTypemod: "OptionalType"},
  ]);
  return _.syntax.$expressionify({
    __kind__: $.ExpressionKind.Function,
    __element__: returnType,
    __cardinality__: cardinality,
    __name__: "sys_obj::getDataObj",
    __args__: positionalArgs,
    __namedargs__: namedArgs,
  }) as any;
};



export { $DataObj, DataObj, $DataObjAction, DataObjAction, $Form, Form, $FormField, FormField, $NodeObj, NodeObj };

type __defaultExports = {
  "DataObj": typeof DataObj;
  "DataObjAction": typeof DataObjAction;
  "Form": typeof Form;
  "FormField": typeof FormField;
  "NodeObj": typeof NodeObj;
  "getDataObjAction": typeof getDataObjAction;
  "getNodeObjById": typeof getNodeObjById;
  "getNodeObjByName": typeof getNodeObjByName;
  "getDataObj": typeof getDataObj
};
const __defaultExports: __defaultExports = {
  "DataObj": DataObj,
  "DataObjAction": DataObjAction,
  "Form": Form,
  "FormField": FormField,
  "NodeObj": NodeObj,
  "getDataObjAction": getDataObjAction,
  "getNodeObjById": getNodeObjById,
  "getNodeObjByName": getNodeObjByName,
  "getDataObj": getDataObj
};
export default __defaultExports;

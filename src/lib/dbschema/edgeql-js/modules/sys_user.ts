// GENERATED by @edgedb/generate v0.3.4

import * as $ from "../reflection";
import * as _ from "../imports";
import type * as _default from "./default";
import type * as _std from "./std";
import type * as _sys_core from "./sys_core";
export type $UserλShape = $.typeutil.flatten<_default.$PersonλShape & {
  "userName": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "password": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "userTypes": $.LinkDesc<$UserType, $.Cardinality.Many, {
    "@isActive": $.PropertyDesc<_std.$bool, $.Cardinality.AtMostOne>;
  }, false, false, false, false>;
}>;
type $User = $.ObjectType<"sys_user::User", $UserλShape, null, [
  ..._default.$Person['__exclusives__'],
]>;
const $User = $.makeType<$User>(_.spec, "31bd109a-6ebf-11ee-80cf-8be07177b08a", _.syntax.literal);

const User: $.$expr_PathNode<$.TypeSet<$User, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($User, $.Cardinality.Many), null);

export type $SYS_USERλShape = $.typeutil.flatten<$UserλShape & {
}>;
type $SYS_USER = $.ObjectType<"sys_user::SYS_USER", $SYS_USERλShape, null, [
  ...$User['__exclusives__'],
]>;
const $SYS_USER = $.makeType<$SYS_USER>(_.spec, "31d61607-6ebf-11ee-bf61-df038cb81fab", _.syntax.literal);

const SYS_USER: $.$expr_PathNode<$.TypeSet<$SYS_USER, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($SYS_USER, $.Cardinality.Many), null);

export type $SYS_USER_IDλShape = $.typeutil.flatten<$UserλShape & {
}>;
type $SYS_USER_ID = $.ObjectType<"sys_user::SYS_USER_ID", $SYS_USER_IDλShape, null, [
  ...$User['__exclusives__'],
]>;
const $SYS_USER_ID = $.makeType<$SYS_USER_ID>(_.spec, "31d997dd-6ebf-11ee-81ed-6be96a146b74", _.syntax.literal);

const SYS_USER_ID: $.$expr_PathNode<$.TypeSet<$SYS_USER_ID, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($SYS_USER_ID, $.Cardinality.Many), null);

export type $UserTypeλShape = $.typeutil.flatten<_sys_core.$ObjλShape & {
  "resources": $.LinkDesc<_sys_core.$Obj, $.Cardinality.Many, {}, false, false,  false, false>;
  "<userTypes[is sys_user::User]": $.LinkDesc<$User, $.Cardinality.Many, {}, false, false,  false, false>;
  "<userTypes[is sys_user::SYS_USER]": $.LinkDesc<$SYS_USER, $.Cardinality.Many, {}, false, false,  false, false>;
  "<userTypes[is sys_user::SYS_USER_ID]": $.LinkDesc<$SYS_USER_ID, $.Cardinality.Many, {}, false, false,  false, false>;
  "<userTypes[is sys_user::currentUser]": $.LinkDesc<$currentUser, $.Cardinality.Many, {}, false, false,  false, false>;
  "<userTypes": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $UserType = $.ObjectType<"sys_user::UserType", $UserTypeλShape, null, [
  ..._sys_core.$Obj['__exclusives__'],
]>;
const $UserType = $.makeType<$UserType>(_.spec, "31c84135-6ebf-11ee-b117-d33a0c9ede80", _.syntax.literal);

const UserType: $.$expr_PathNode<$.TypeSet<$UserType, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($UserType, $.Cardinality.Many), null);

export type $WidgetλShape = $.typeutil.flatten<_sys_core.$ObjλShape & {
}>;
type $Widget = $.ObjectType<"sys_user::Widget", $WidgetλShape, null, [
  ..._sys_core.$Obj['__exclusives__'],
]>;
const $Widget = $.makeType<$Widget>(_.spec, "31cdac8e-6ebf-11ee-b3d8-252d6a9bd321", _.syntax.literal);

const Widget: $.$expr_PathNode<$.TypeSet<$Widget, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Widget, $.Cardinality.Many), null);

export type $currentUserλShape = $.typeutil.flatten<$UserλShape & {
}>;
type $currentUser = $.ObjectType<"sys_user::currentUser", $currentUserλShape, null, [
  ...$User['__exclusives__'],
]>;
const $currentUser = $.makeType<$currentUser>(_.spec, "31dcf904-6ebf-11ee-b443-5919dbaa2731", _.syntax.literal);

const currentUser: $.$expr_PathNode<$.TypeSet<$currentUser, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($currentUser, $.Cardinality.Many), null);

type getUserλFuncExpr<
  P1 extends _.castMaps.orScalarLiteral<$.TypeSet<_std.$str>>,
> = $.$expr_Function<
  $User, $.cardutil.overrideLowerBound<$.cardutil.paramCardinality<P1>, 'Zero'>
>;
function getUser<
  P1 extends _.castMaps.orScalarLiteral<$.TypeSet<_std.$str>>,
>(
  userName: P1,
): getUserλFuncExpr<P1>;
function getUser(...args: any[]) {
  const {returnType, cardinality, args: positionalArgs, namedArgs} = _.syntax.$resolveOverload('sys_user::getUser', args, _.spec, [
    {args: [{typeId: "00000000-0000-0000-0000-000000000101", optional: false, setoftype: false, variadic: false}], returnTypeId: "31bd109a-6ebf-11ee-80cf-8be07177b08a", returnTypemod: "OptionalType"},
  ]);
  return _.syntax.$expressionify({
    __kind__: $.ExpressionKind.Function,
    __element__: returnType,
    __cardinality__: cardinality,
    __name__: "sys_user::getUser",
    __args__: positionalArgs,
    __namedargs__: namedArgs,
  }) as any;
};

type getUserTypeλFuncExpr<
  P1 extends _.castMaps.orScalarLiteral<$.TypeSet<_std.$str>>,
> = $.$expr_Function<
  $UserType, $.cardutil.overrideLowerBound<$.cardutil.paramCardinality<P1>, 'Zero'>
>;
function getUserType<
  P1 extends _.castMaps.orScalarLiteral<$.TypeSet<_std.$str>>,
>(
  userTypeName: P1,
): getUserTypeλFuncExpr<P1>;
function getUserType(...args: any[]) {
  const {returnType, cardinality, args: positionalArgs, namedArgs} = _.syntax.$resolveOverload('sys_user::getUserType', args, _.spec, [
    {args: [{typeId: "00000000-0000-0000-0000-000000000101", optional: false, setoftype: false, variadic: false}], returnTypeId: "31c84135-6ebf-11ee-b117-d33a0c9ede80", returnTypemod: "OptionalType"},
  ]);
  return _.syntax.$expressionify({
    __kind__: $.ExpressionKind.Function,
    __element__: returnType,
    __cardinality__: cardinality,
    __name__: "sys_user::getUserType",
    __args__: positionalArgs,
    __namedargs__: namedArgs,
  }) as any;
};

type getWidgetλFuncExpr<
  P1 extends _.castMaps.orScalarLiteral<$.TypeSet<_std.$str>>,
> = $.$expr_Function<
  $Widget, $.cardutil.overrideLowerBound<$.cardutil.paramCardinality<P1>, 'Zero'>
>;
function getWidget<
  P1 extends _.castMaps.orScalarLiteral<$.TypeSet<_std.$str>>,
>(
  widgetName: P1,
): getWidgetλFuncExpr<P1>;
function getWidget(...args: any[]) {
  const {returnType, cardinality, args: positionalArgs, namedArgs} = _.syntax.$resolveOverload('sys_user::getWidget', args, _.spec, [
    {args: [{typeId: "00000000-0000-0000-0000-000000000101", optional: false, setoftype: false, variadic: false}], returnTypeId: "31cdac8e-6ebf-11ee-b3d8-252d6a9bd321", returnTypemod: "OptionalType"},
  ]);
  return _.syntax.$expressionify({
    __kind__: $.ExpressionKind.Function,
    __element__: returnType,
    __cardinality__: cardinality,
    __name__: "sys_user::getWidget",
    __args__: positionalArgs,
    __namedargs__: namedArgs,
  }) as any;
};

const $sys_user__globals: {  SYS_USER: _.syntax.$expr_Global<
              // "sys_user::SYS_USER",
              $SYS_USER,
              $.Cardinality.AtMostOne
              >,  SYS_USER_ID: _.syntax.$expr_Global<
              // "sys_user::SYS_USER_ID",
              $SYS_USER_ID,
              $.Cardinality.AtMostOne
              >,  currentUser: _.syntax.$expr_Global<
              // "sys_user::currentUser",
              $currentUser,
              $.Cardinality.AtMostOne
              >,  currentUserId: _.syntax.$expr_Global<
              // "sys_user::currentUserId",
              _std.$uuid,
              $.Cardinality.AtMostOne
              >} = {  SYS_USER: _.syntax.makeGlobal(
              "sys_user::SYS_USER",
              $.makeType(_.spec, "31d61607-6ebf-11ee-bf61-df038cb81fab", _.syntax.literal),
              $.Cardinality.AtMostOne) as any,  SYS_USER_ID: _.syntax.makeGlobal(
              "sys_user::SYS_USER_ID",
              $.makeType(_.spec, "31d997dd-6ebf-11ee-81ed-6be96a146b74", _.syntax.literal),
              $.Cardinality.AtMostOne) as any,  currentUser: _.syntax.makeGlobal(
              "sys_user::currentUser",
              $.makeType(_.spec, "31dcf904-6ebf-11ee-b443-5919dbaa2731", _.syntax.literal),
              $.Cardinality.AtMostOne) as any,  currentUserId: _.syntax.makeGlobal(
              "sys_user::currentUserId",
              $.makeType(_.spec, "00000000-0000-0000-0000-000000000100", _.syntax.literal),
              $.Cardinality.AtMostOne) as any};



export { $User, User, $SYS_USER, SYS_USER, $SYS_USER_ID, SYS_USER_ID, $UserType, UserType, $Widget, Widget, $currentUser, currentUser };

type __defaultExports = {
  "User": typeof User;
  "SYS_USER": typeof SYS_USER;
  "SYS_USER_ID": typeof SYS_USER_ID;
  "UserType": typeof UserType;
  "Widget": typeof Widget;
  "currentUser": typeof currentUser;
  "getUser": typeof getUser;
  "getUserType": typeof getUserType;
  "getWidget": typeof getWidget;
  "global": typeof $sys_user__globals
};
const __defaultExports: __defaultExports = {
  "User": User,
  "SYS_USER": SYS_USER,
  "SYS_USER_ID": SYS_USER_ID,
  "UserType": UserType,
  "Widget": Widget,
  "currentUser": currentUser,
  "getUser": getUser,
  "getUserType": getUserType,
  "getWidget": getWidget,
  "global": $sys_user__globals
};
export default __defaultExports;
